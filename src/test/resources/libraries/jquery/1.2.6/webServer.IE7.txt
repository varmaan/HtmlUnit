core module: Basic requirements (0, 7, 7)
Array.push()
Function.apply()
getElementById
getElementsByTagName
RegExp
jQuery
$()
core module: $() (0, 8, 8)
Basic selector with jQuery object as context
Correct number of elements generated for code: 1
Correct number of elements generated for img: 1
Correct number of elements generated for div hr code b: 4
Correct number of elements generated for window: 1
Correct number of elements generated for document: 1
Test passing an array to the factory: 2
Test passing an html node to the factory: [object]
core module: browser (0, 13, 13)
Checking UA string: 6.0
Checking UA string: 7.0
Checking UA string: 1.7.12
Checking UA string: 1.8.1.3
Checking UA string: 1.7.5
Checking UA string: 1.8.0.11
Checking UA string: 9.20
Checking UA string: 9.20
Checking UA string: 9.20
Checking UA string: 418.9
Checking UA string: 418.8
Checking UA string: 312.8
Checking UA string: null
core module: noConflict (0, 6, 6)
noConflict returned the jQuery object: function( selector, context ) { // The jQuery object is actually just the init constructor 'enhanced' return new jQuery.fn.init( selector, context ); }
Make sure jQuery wasn't touched.: function( selector, context ) { // The jQuery object is actually just the init constructor 'enhanced' return new jQuery.fn.init( selector, context ); }
Make sure $ was reverted.: $
noConflict returned the jQuery object: function( selector, context ) { // The jQuery object is actually just the init constructor 'enhanced' return new jQuery.fn.init( selector, context ); }
Make sure jQuery was reverted.: jQuery
Make sure $ was reverted.: $
core module: isFunction (0, 21, 21)
No Value
null Value
undefined Value
Empty String Value
0 Value
String Function( function String() { [native code] } )
Array Function( function Array() { [native code] } )
Object Function( function Object() { [native code] } )
Function Function( function Function() { [native code] } )
Function String
Function Array
Function Object
Normal Function
Object Element
getAttribute Function
childNodes Property
A normal DOM Element
A default function property
Anchor Element
Recursive Function Call
Recursive Function Call
core module: $('html') (0, 6, 6)
Creating a script
Make sure the script wasn't executed prematurely
Executing a scripts contents in the right context
Creating a link
Check node,textnode,comment creation (some browsers delete comments)
Make sure that options are auto-selected #2050
core module: $('html', context) (0, 1, 1)
Verify a span created with a div context works, #1763: 1
core module: $(selector, xml).text(str) - Loaded via XML document (0, 2, 2)
Verify initial text correct: blabla
Verify new text correct: newtext
core module: length (0, 1, 1)
Get Number of Elements Found: 6
core module: size() (0, 1, 1)
Get Number of Elements Found: 6
core module: get() (0, 1, 1)
Get All Elements
core module: get(Number) (0, 1, 1)
Get A Single Element: [object]
core module: add(String|Element|Array|undefined) (0, 12, 12)
Check elements from document
Check elements from document
Check elements from array
Check on-the-fly element1: x1
Check on-the-fly element2: x2
Check on-the-fly element1: x1
Check on-the-fly element2: x2
Check that undefined adds nothing: 0
Pass an array: 3
Check duplicated elements: 1
Check duplicated elements using the window: 1
Add a form (adds the elements)
core module: each(Function) (0, 1, 1)
Execute a function, Relative
core module: index(Object) (0, 10, 10)
Check for index of elements: 0
Check for index of elements: 1
Check for index of elements: 0
Check for index of elements: 1
Check for index of elements: 2
Check for index of elements: 3
Check for not found index: -1
Check for not found index: -1
Pass in a jQuery object: 0
Pass in a jQuery object: 1
core module: attr(String) (0, 26, 26)
Check for value attribute: Test
Check for defaultValue attribute: Test
Check for type attribute: text
Check for type attribute: radio
Check for type attribute: checkbox
Check for rel attribute: bookmark
Check for title attribute: Google!
Check for hreflang attribute: en
Check for lang attribute: en
Check for class attribute: blog link
Check for name attribute: name
Check for name attribute: action
Check for action attribute
Check for maxlength attribute: 30
Check for maxLength attribute: 30
Check for maxLength attribute: 30
Check for selectedIndex attribute: 3
Check for nodeName attribute: DIV
Check for tagName attribute: DIV
Check for non-absolute href (an anchor): #5
Make sure that a non existent attribute returns undefined
Make sure a null expando returns null
Make sure the dom attribute is retrieved when no expando is found: baz
Make sure the expando is preferred over the dom attribute: bar
Make sure that setting works well when both expando and dom attribute are available: cool
Make sure the expando is preferred over the dom attribute, even if undefined
core module: attr(String) in XML Files (0, 2, 2)
Check class attribute in XML document: foo
Check for attribute in XML document: bar
core module: attr(String, Function) (0, 2, 2)
Set value from id: text1
Set value with an index: 0
core module: attr(Hash) (0, 1, 1)
Set Multiple Attributes
core module: attr(String, Object) (0, 17, 17)
Set Attribute, the #false element didn't get the attribute 'foo': false
Try to set an attribute to nothing
Set name attribute: something
Set checked attribute: true
Set checked attribute: false
Set readonly attribute: true
Set readonly attribute: false
Set maxlength attribute: 5
Set maxlength attribute: 10
Set attribute to a string of "0": 0
Set attribute to the number 0: 0
Set attribute to the number 1: 1
Check node,textnode,comment for attr: attrvalue
Exception thrown when trying to change type property
Verify that you can't change the type of an input element: checkbox
Exception thrown when trying to change type property
Verify that you can change the type of an input element that isn't in the DOM: checkbox
core module: attr(String, Object) - Loaded via XML document (0, 2, 2)
attr() in XML context: Check first title: Location
attr() in XML context: Check second title: Users
core module: css(String|Hash) (0, 19, 19)
Check for css property "display": none
Modifying CSS display: Assert element is visible
Modified CSS display: Assert element is hidden
Modified CSS display: Assert element is visible
Modified CSS float using "styleFloat": Assert float is right: right
Modified CSS float using "cssFloat": Assert float is left: left
Modified CSS float using "float": Assert float is right: right
Modified CSS font-size: Assert font-size is 30px: 30px
Assert opacity is 0 as a String: 0
Assert opacity is 0 as a Number: 0
Assert opacity is 0.25 as a String: 0.25
Assert opacity is 0.25 as a Number: 0.25
Assert opacity is 0.5 as a String: 0.5
Assert opacity is 0.5 as a Number: 0.5
Assert opacity is 0.75 as a String: 0.75
Assert opacity is 0.75 as a Number: 0.75
Assert opacity is 1 as a String: 1
Assert opacity is 1 as a Number: 1
Assert opacity is 1 when set to an empty String: 1
core module: css(String, Object) (0, 21, 21)
Modifying CSS display: Assert element is visible
Modified CSS display: Assert element is hidden
Modified CSS display: Assert element is visible
Modified CSS float using "styleFloat": Assert float is left: left
Modified CSS float using "cssFloat": Assert float is right: right
Modified CSS float using "float": Assert float is left: left
Modified CSS font-size: Assert font-size is 20px: 20px
Assert opacity is 0 as a String: 0
Assert opacity is 0 as a Number: 0
Assert opacity is 0.25 as a String: 0.25
Assert opacity is 0.25 as a Number: 0.25
Assert opacity is 0.5 as a String: 0.5
Assert opacity is 0.5 as a Number: 0.5
Assert opacity is 0.75 as a String: 0.75
Assert opacity is 0.75 as a Number: 0.75
Assert opacity is 1 as a String: 1
Assert opacity is 1 as a Number: 1
Assert opacity is 1 when set to an empty String: 1
Assert opacity is 1 when a different filter is set in IE, #1438: 1
Check node,textnode,comment css works: 1px
Make sure browser thinks it is hidden: none
core module: jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) (0, 4, 4)
Check first radio still checked.
Check last radio still NOT checked.
Check first checkbox still checked.
Check last checkbox still NOT checked.
core module: width() (0, 9, 9)
Test set to 30 correctly: 30
Test negative width ignored: 30
Test padding specified with pixels: 30
Test border specified with pixels: 30
Test padding specified with ems: 30
Test border specified with ems: 30
Test padding specified with percent: 30
Test hidden div: 30
Test child width with border and padding: 20
core module: height() (0, 8, 8)
Test set to 30 correctly: 30
Test negative height ignored: 30
Test padding specified with pixels: 30
Test border specified with pixels: 30
Test padding specified with ems: 30
Test border specified with ems: 30
Test padding specified with percent: 30
Test hidden div: 30
core module: text() (0, 1, 1)
Check for merged text of more then one element.: This link has class="blog": Simon Willison's Weblog
core module: wrap(String|Element) (0, 8, 8)
Check for wrapping of on-the-fly html: Try them out:
Check if wrapper has class "red"
Check for element wrapping
Check for element wrapping: Try them out:
Checkbox's state is erased after wrap() action, see #769
Checkbox's state is erased after wrap() action, see #769
Check node,textnode,comment wraps ok: 3
Check node,textnode,comment wraps doesn't hurt text: hi there 
core module: wrapAll(String|Element) (0, 8, 8)
Check for wrapping of on-the-fly html: 1
Check if wrapper has class "red"
Check if wrapper has class "red"
Correct Previous Sibling: [object]
Correct Parent: [object]
Same Parent: [object]
Correct Previous Sibling: [object]
Correct Parent: [object]
core module: wrapInner(String|Element) (0, 6, 6)
Only one child: 1
Verify Right Element
Verify Elements Intact: 0
Only one child: 1
Verify Right Element
Verify Elements Intact: 0
core module: append(String|Element|Array<Element>|jQuery) (0, 21, 21)
Check if text appending works: Try them out:buga
Appending html options to select element: appendTest
Check for appending of element: This link has class="blog": Simon Willison's WeblogTry them out:
Check for appending of array of elements: This link has class="blog": Simon Willison's WeblogTry them out:Yahoo
Check for appending of jQuery object: This link has class="blog": Simon Willison's WeblogTry them out:Yahoo
Check for appending a number
Check for appending text with spaces
Check for appending an empty array.
Check for appending an empty string.
Check for appending an empty nodelist.
Check for appending a form: 1
Test for appending a DOM node to the contents of an IFrame
Append legend (#legend)
Appending <OPTION> (all caps): Test
Append colgroup
Append col
Append caption
Append Select (#appendSelect1, #appendSelect2)
Check node,textnode,comment append moved leaving just the div: 1
Check node,textnode,comment append works
Check node,textnode,comment append cleanup worked
core module: appendTo(String|Element|Array<Element>|jQuery) (0, 6, 6)
Check if text appending works: Try them out:buga
Appending html options to select element: appendTest
Check for appending of element: This link has class="blog": Simon Willison's WeblogTry them out:
Check for appending of array of elements: This link has class="blog": Simon Willison's WeblogTry them out:Yahoo
Check for appending of jQuery object: This link has class="blog": Simon Willison's WeblogTry them out:Yahoo
Append select (#foo select)
core module: prepend(String|Element|Array<Element>|jQuery) (0, 5, 5)
Check if text prepending works: bugaTry them out:
Prepending html options to select element: prependTest
Check for prepending of element: Try them out:This link has class="blog": Simon Willison's Weblog
Check for prepending of array of elements: Try them out:YahooThis link has class="blog": Simon Willison's Weblog
Check for prepending of jQuery object: Try them out:YahooThis link has class="blog": Simon Willison's Weblog
core module: prependTo(String|Element|Array<Element>|jQuery) (0, 6, 6)
Check if text prepending works: bugaTry them out:
Prepending html options to select element: prependTest
Check for prepending of element: Try them out:This link has class="blog": Simon Willison's Weblog
Check for prepending of array of elements: Try them out:YahooThis link has class="blog": Simon Willison's Weblog
Check for prepending of jQuery object: Try them out:YahooThis link has class="blog": Simon Willison's Weblog
Prepend Select (#prependSelect1, #prependSelect2)
core module: before(String|Element|Array<Element>|jQuery) (0, 4, 4)
Insert String before: This is a normal link: bugaYahoo
Insert element before: This is a normal link: Try them out:Yahoo
Insert array of elements before: This is a normal link: Try them out:diveintomarkYahoo
Insert jQuery before: This is a normal link: Try them out:diveintomarkYahoo
core module: insertBefore(String|Element|Array<Element>|jQuery) (0, 4, 4)
Insert String before: This is a normal link: bugaYahoo
Insert element before: This is a normal link: Try them out:Yahoo
Insert array of elements before: This is a normal link: Try them out:diveintomarkYahoo
Insert jQuery before: This is a normal link: Try them out:diveintomarkYahoo
core module: after(String|Element|Array<Element>|jQuery) (0, 4, 4)
Insert String after: This is a normal link: Yahoobuga
Insert element after: This is a normal link: YahooTry them out:
Insert array of elements after: This is a normal link: YahooTry them out:diveintomark
Insert jQuery after: This is a normal link: YahooTry them out:diveintomark
core module: insertAfter(String|Element|Array<Element>|jQuery) (0, 4, 4)
Insert String after: This is a normal link: Yahoobuga
Insert element after: This is a normal link: YahooTry them out:
Insert array of elements after: This is a normal link: YahooTry them out:diveintomark
Insert jQuery after: This is a normal link: YahooTry them out:diveintomark
core module: replaceWith(String|Element|Array<Element>|jQuery) (0, 10, 10)
Replace element with string
Verify that original element is gone, after string
Replace element with element
Verify that original element is gone, after element
Replace element with array of elements
Replace element with array of elements
Verify that original element is gone, after array of elements
Replace element with set of elements
Replace element with set of elements
Verify that original element is gone, after set of elements
core module: replaceAll(String|Element|Array<Element>|jQuery) (0, 10, 10)
Replace element with string
Verify that original element is gone, after string
Replace element with element
Verify that original element is gone, after element
Replace element with array of elements
Replace element with array of elements
Verify that original element is gone, after array of elements
Replace element with set of elements
Replace element with set of elements
Verify that original element is gone, after set of elements
core module: end() (0, 3, 3)
Check for end: Yahoo
Check for end with nothing to end
Check for non-destructive behaviour: Yahoo
core module: find(String) (0, 2, 2)
Check for find: Yahoo
Check node,textnode,comment to find zero divs: 0
core module: clone() (0, 20, 20)
Assert text for #en: This is a normal link: Yahoo
Check for clone: Try them out:Yahoo
Reassert text for #en: This is a normal link: Yahoo
Clone a <table/>: TABLE
Clone a <tr/>: TR
Clone a <td/>: TD
Clone a <div/>: DIV
Clone a <button/>: BUTTON
Clone a <ul/>: UL
Clone a <ol/>: OL
Clone a <li/>: LI
Clone a <input type='checkbox' />: INPUT
Clone a <select/>: SELECT
Clone a <option/>: OPTION
Clone a <textarea/>: TEXTAREA
Clone a <tbody/>: TBODY
Clone a <thead/>: THEAD
Clone a <tfoot/>: TFOOT
Clone a <iframe/>: IFRAME
Check node,textnode,comment clone works (some browsers delete comments on clone)
core module: clone() on XML nodes (0, 2, 2)
Check original XML node was correctly set: origval
Check cloned XML node was correctly set: cloneval
core module: is(String) (0, 26, 26)
Check for element: A form must be a form
Check for element: A form is not a div
Check for class: Expected class "blog"
Check for class: Did not expect class "link"
Check for multiple classes: Expected classes "blog" and "link"
Check for multiple classes: Expected classes "blog" and "link", but not "blogTest"
Check for attribute: Expected attribute lang to be "en"
Check for attribute: Expected attribute lang to be "en", not "de"
Check for attribute: Expected attribute type to be "text"
Check for attribute: Expected attribute type to be "text", not "radio"
Check for pseudoclass: Expected to be disabled
Check for pseudoclass: Expected not disabled
Check for pseudoclass: Expected to be checked
Check for pseudoclass: Expected not checked
Check for child: Expected a child "p" element
Check for child: Did not expect "ul" element
Check for childs: Expected "p", "a" and "code" child elements
Check for childs: Expected "p", "a" and "code" child elements, but no "ol"
Expected false for an invalid expression - 0
Expected false for an invalid expression - null
Expected false for an invalid expression - ""
Expected false for an invalid expression - undefined
Comma-seperated; Check for lang attribute: Expect en or de
Comma-seperated; Check for lang attribute: Expect en or de
Comma-seperated; Check for lang attribute: Expect en or de
Comma-seperated; Check for lang attribute: Expect en or de
core module: $.extend(Object, Object) (0, 20, 20)
Check if extended: settings must be extended
Check if not modified: options must not be modified
Check if extended: settings must be extended
Check if not modified: options must not be modified
Check if foo: settings must be extended
Check if not deep2: options must not be modified
Make sure that a deep clone was not attempted on the document: [object]
Check to make sure null values are copied
Check to make sure undefined values are not copied
Check to make sure null values are inserted
Check to make sure a recursive obj doesn't go never-ending loop by not copying it over
Check to make sure a value with coersion 'false' copies over when necessary to fix #1907: 1
Check to make sure values equal with coersion (but not actually equal) overwrite correctly
Make sure a null value doesn't crash with deep extend, for #1908
Make sure a null value can be overwritten: notnull
Verify a function can be extended: value
Check if extended: settings must be extended
Check if not modified: options1 must not be modified
Check if not modified: options1 must not be modified
Check if not modified: options2 must not be modified
core module: val() (0, 4, 4)
Check for value of input element: Test
Check for value of input element: 
Check a paragraph element to see if it has a value: 
Check an empty jQuery object will return undefined from val
core module: val(String) (0, 4, 4)
Check for modified value of input element: bla
Check for modified (via val(String)) value of input element
Check for modified (via val(String)) value of select element: 3
Check node,textnode,comment with val(): asdf
core module: html(String) (0, 11, 11)
Set HTML
Check node,textnode,comment with html(): bold
Selected option correct: O2
$().html().evalScripts() Evals Scripts Twice in Firefox, see #975
$().html().evalScripts() Evals Scripts Twice in Firefox, see #975
Script is executed in order: 0
Execute after html (even though appears before): 1
Script (nested) is executed in order: 1
Execute after html: 1
Script (unnested) is executed in order: 2
Execute after html: 1
core module: filter() (0, 6, 6)
filter(String)
filter('String, String')
filter('String,String')
filter(Function)
Check node,textnode,comment to filter the one span: 1
Check node,textnode,comment to filter the one span: 0
core module: not() (0, 8, 8)
not('selector'): 2
not(DOMElement): 2
not('.class')
not('selector, selector')
not(jQuery)
not(Array-like DOM collection): 0
not('complex selector')
filter out DOM element
core module: andSelf() (0, 4, 4)
Check for siblings and self
Check for children and self
Check for parent and self
Check for parents and self
core module: siblings([String]) (0, 5, 5)
Check for siblings
Check for filtered siblings (has code child element)
Check for filtered siblings (has anchor child element)
Check for multiple filters
Check for unique results from siblings
core module: children([String]) (0, 3, 3)
Check for children
Check for filtered children
Check for multiple filters
core module: parent([String]) (0, 5, 5)
Simple parent check: ap
Filtered parent check: ap
Filtered parent check, no match: 0
Check for multiple filters: ap
Check for unique results from parent
core module: parents([String]) (0, 5, 5)
Simple parents check: ap
Filtered parents check: ap
Filtered parents check2: main
Check for multiple filters
Check for unique results from parents
core module: next([String]) (0, 4, 4)
Simple next check: foo
Filtered next check: foo
Filtered next check, no match: 0
Multiple filters: foo
core module: prev([String]) (0, 4, 4)
Simple prev check: ap
Filtered prev check: ap
Filtered prev check, no match: 0
Multiple filters: ap
core module: show() (0, 15, 15)
Show
Show using correct display type for div: block
Show using correct display type for p: block
Show using correct display type for a: inline
Show using correct display type for code: inline
Show using correct display type for pre: block
Show using correct display type for span: inline
Show using correct display type for table: block
Show using correct display type for thead: block
Show using correct display type for tbody: block
Show using correct display type for tr: block
Show using correct display type for th: block
Show using correct display type for td: block
Show using correct display type for ul: block
Show using correct display type for li: block
core module: addClass(String) (0, 2, 2)
Add Class
Check node,textnode,comment for addClass
core module: removeClass(String) - simple (0, 4, 4)
Remove Class
Remove multiple classes
Empty string passed to removeClass
Check node,textnode,comment for removeClass
core module: toggleClass(String) (0, 3, 3)
Assert class not present
Assert class present
Assert class not present
core module: removeAttr(String (0, 1, 1)
remove class: 
core module: text(String) (0, 4, 4)
Check escaped text: <div><b>Hello</b> cruel world!</div>
Check node,textnode,comment with text(): hi!
Check node,textnode,comment with text(): there 
Check node,textnode,comment with text(): 8
core module: $.each(Object,Function) (0, 12, 12)
Check array iteration: 0
Check array iteration: 1
Check array iteration: 2
Check array iteration: 0
Check array iteration: 1
Check array iteration: 2
Check object iteration: name
Check object iteration: lang
Looping over an array: 6
Looping over an array, with break: 3
Looping over an object: 6
Looping over an object, with break: 3
core module: $.prop (0, 2, 2)
Check with Function argument: ap
Check with value argument: value
core module: $.className (0, 6, 6)
Check single added class: hi
Check more added classes: hi foo bar
Remove all classes: 
Check removal of one class: hi bar
Check has1
Check has2
core module: $.data (0, 5, 5)
Check for no data exists: undefined
Check for added data: success
Check for overwritten data: overwritten
Check that data wasn't removed: overwritten
Check for null data
core module: .data() (0, 18, 18)
Check for no data exists: undefined
Check for added data: success
Check for overwritten data: overwritten
Check that data wasn't removed: overwritten
Check for null data
Check for original data: overwritten
Check for namespaced data: 2
Check for unmatched namespace: overwritten
Check triggered setter functions: 2
Check triggered getter functions: 5
Check for original data: 1
Check for namespaced data: 2
Check for unmatched namespace: 1
Check triggered setter functions: 1
Check triggered getter functions: 5
Check for original data: testroot
Check for namespaced data: testfoo
Check for unmatched namespace: testroot
core module: $.removeData (0, 1, 1)
Check removal of data: undefined
core module: .removeData() (0, 6, 6)
Check removal of data: undefined
Make sure data is intact: testing2
Make sure data is intact: testing
Make sure data is intact: testing2
Make sure data is intact: undefined
Make sure data is intact: undefined
core module: remove() (0, 6, 6)
Check text is not removed
Check remove: 0
Check text is not removed
Check filtered remove: 1
Check node,textnode,comment remove works: 3
Check node,textnode,comment remove works: 0
core module: empty() (0, 3, 3)
Check text is removed: 0
Check elements are not removed: 4
Check node,textnode,comment empty works: 
core module: slice() (0, 5, 5)
slice(1,2)
slice(1)
slice(0,3)
slice(-1)
eq(1)
core module: map() (0, 2, 2)
Array Map
Single Map
core module: contents() (0, 12, 12)
Check element contents: 9
Check existance of IFrame document
Check existance of IFrame body
Find span in IFrame and check its text: span text
Check the original div and the new div are in IFrame: 2
Add text to div in IFrame: init text
Add text to div in IFrame: div text
Delete the div and check only one div left in IFrame: 1
Make sure the correct div is still left after deletion in IFrame: span text
Check for JS error on add and delete of a table in IFrame: 1
Check node,textnode,comment contents is just one: 1
Check node,textnode,comment contents is just the one from span: hi
core module: $.makeArray (0, 15, 15)
Pass makeArray a jQuery object: HEAD
Pass makeArray a nodelist: PWD
Pass makeArray an arguments array: 12
Pass makeArray a real array: 123
Pass nothing to makeArray and expect an empty array: 0
Pass makeArray a number: 0
Pass makeArray a string: foo
Pass makeArray a boolean: function Boolean() { [native code] } 
Pass makeArray a single node: DIV
Pass makeArray an array like map (with length): ab
Pass makeArray a childNodes array: HEAD
Pass makeArray a function: 1
Pass makeArray the window: [object]
Pass makeArray a regex: function RegExp() { [native code] } 
Pass makeArray a form (treat as elements)
dimensions module: innerWidth() (0, 3, 3)
Test with margin and border: 30
Test with margin, border and padding: 70
Test hidden div: 70
dimensions module: innerHeight() (0, 3, 3)
Test with margin and border: 30
Test with margin, border and padding: 70
Test hidden div: 70
dimensions module: outerWidth() (0, 6, 6)
Test with only width set: 30
Test with padding: 70
Test with padding and border: 74
Test with padding, border and margin without margin option: 74
Test with padding, border and margin with margin option: 94
Test hidden div with padding, border and margin with margin option: 94
dimensions module: outerHeight() (0, 6, 6)
Test with only width set: 30
Test with padding: 70
Test with padding and border: 74
Test with padding, border and margin without margin option: 74
Test with padding, border and margin with margin option: 94
Test hidden div with padding, border and margin with margin option: 94
selector module: element (0, 9, 9)
Select all
Select all elements, no comment nodes
Element Selector (p)
Element Selector (body)
Element Selector (html)
Parent Element (div p)
Object/param as context: 2
<input name="length"> cannot be found under IE, see #945
<input name="length"> cannot be found under IE, see #945
selector module: Element Selector with underscore (0, 1, 1)
Element Selector with underscore: 1
selector module: broken (0, 7, 7)
Broken Selector ([)
Broken Selector (()
Broken Selector ({)
Broken Selector (<)
Broken Selector (())
Broken Selector (<>)
Broken Selector ({})
selector module: id (0, 25, 25)
ID Selector (#body)
ID Selector w/ Element (body#body)
ID Selector w/ Element (ul#first)
ID selector with existing ID descendant (#firstp #simon1)
ID selector with non-existant descendant (#firstp #foobar)
ID selector using UTF8 (#台北Táiběi)
Multiple ID selectors using UTF8 (#台北Táiběi, #台北)
Descendant ID selector using UTF8 (div #台北)
Child ID selector using UTF8 (form > #台北)
Escaped ID (#foo\:bar)
Escaped ID (#test\.foo\[5\]bar)
Descendant escaped ID (div #foo\:bar)
Descendant escaped ID (div #test\.foo\[5\]bar)
Child escaped ID (form > #foo\:bar)
Child escaped ID (form > #test\.foo\[5\]bar)
ID Selector, child ID present (#form > #radio1)
ID Selector, not an ancestor ID (#form #first)
ID Selector, not a child ID (#form > #option1a)
All Children of ID (#foo > *)
All Children of ID with no children (#firstUL/*)
ID selector with same value for a name attribute: tName1
ID selector non-existing but name attribute on an A tag: 0
ID Selector on Form with an input that has a name of 'id' (#lengthtest)
ID selector with non-existant ancestor (#asdfasdf #foobar)
ID selector within the context of another element
selector module: class (0, 16, 16)
Class Selector (.blog)
Class Selector (.blog.link)
Class Selector w/ Element (a.blog)
Parent Class Selector (p .blog)
Class selector using UTF8 (.台北Táiběi)
Class selector using UTF8 (.台北)
Class selector using UTF8 (.台北Táiběi.台北)
Class selector using UTF8 (.台北Táiběi, .台北)
Descendant class selector using UTF8 (div .台北Táiběi)
Child class selector using UTF8 (form > .台北Táiběi)
Escaped Class (.foo\:bar)
Escaped Class (.test\.foo\[5\]bar)
Descendant scaped Class (div .foo\:bar)
Descendant scaped Class (div .test\.foo\[5\]bar)
Child escaped Class (form > .foo\:bar)
Child escaped Class (form > .test\.foo\[5\]bar)
selector module: multiple (0, 4, 4)
Comma Support (a.blog, p)
Comma Support (a.blog , p)
Comma Support (a.blog ,p)
Comma Support (a.blog,p)
selector module: child and adjacent (0, 37, 37)
Child (p > a)
Child (p> a)
Child (p >a)
Child (p>a)
Child w/ Class (p > a.blog)
All Children (code > *)
All Grandchildren (p > * > *)
Adjacent (a + a)
Adjacent (a +a)
Adjacent (a+ a)
Adjacent (a+a)
Adjacent (p + p)
Comma, Child, and Adjacent (a + a, code > a)
First Child (p:first-child)
Nth Child (p:nth-child(1))
Last Child (p:last-child)
Last Child (a:last-child)
Nth-child (#main form#form > *:nth-child(2))
Nth-child (#main form#form > :nth-child(2))
Nth-child (#form select:first option:nth-child(3))
Nth-child (#form select:first option:nth-child(0n+3))
Nth-child (#form select:first option:nth-child(1n+0))
Nth-child (#form select:first option:nth-child(1n))
Nth-child (#form select:first option:nth-child(n))
Nth-child (#form select:first option:nth-child(even))
Nth-child (#form select:first option:nth-child(odd))
Nth-child (#form select:first option:nth-child(2n))
Nth-child (#form select:first option:nth-child(2n+1))
Nth-child (#form select:first option:nth-child(3n))
Nth-child (#form select:first option:nth-child(3n+1))
Nth-child (#form select:first option:nth-child(3n+2))
Nth-child (#form select:first option:nth-child(3n+3))
Nth-child (#form select:first option:nth-child(3n-1))
Nth-child (#form select:first option:nth-child(3n-2))
Nth-child (#form select:first option:nth-child(3n-3))
Nth-child (#form select:first option:nth-child(3n+0))
Nth-child (#form select:first option:nth-child(-n+3))
selector module: attributes (0, 20, 20)
Attribute Exists (a[title])
Attribute Exists (*[title])
Attribute Exists ([title])
Attribute Equals (a[rel='bookmark'])
Attribute Equals (a[rel="bookmark"])
Attribute Equals (a[rel=bookmark])
Multiple Attribute Equals (#form input[type='hidden'],#form input[type='radio'])
Multiple Attribute Equals (#form input[type="hidden"],#form input[type='radio'])
Multiple Attribute Equals (#form input[type=hidden],#form input[type=radio])
Attribute selector using UTF8 (span[lang=中文])
Attribute Begins With (a[href ^= 'http://www'])
Attribute Ends With (a[href $= 'org/'])
Attribute Contains (a[href *= 'google'])
Select options via [selected] (#select1 option[selected])
Select options via [selected] (#select2 option[selected])
Select options via [selected] (#select3 option[selected])
Grouped Form Elements (input[name='foo[bar]'])
:not() Existing attribute (#form select:not([multiple]))
:not() Equals attribute (#form select:not([name=select1]))
:not() Equals quoted attribute (#form select:not([name='select1']))
selector module: pseudo (:) selectors (0, 35, 35)
First Child (p:first-child)
Last Child (p:last-child)
Only Child (a:only-child)
Empty (ul:empty)
Enabled UI Element (#form input:enabled)
Disabled UI Element (#form input:disabled)
Checked UI Element (#form input:checked)
Selected Option Element (#form option:selected)
Text Contains (a:contains('Google'))
Text Contains (a:contains('Google Groups'))
Element Preceded By (p ~ div)
Not (a.blog:not(.link))
Not - multiple (#form option:not(:contains('Nothing'),#option1b,:selected))
Not - complex (#form option:not([id^='opt']:gt(0):nth-child(-n+3)))
Not - recursive (#form option:not(:not(:selected))[id^='option3'])
nth Element (p:nth(1))
First Element (p:first)
Last Element (p:last)
Even Elements (p:even)
Odd Elements (p:odd)
Position Equals (p:eq(1))
Position Greater Than (p:gt(0))
Position Less Than (p:lt(3))
Is A Parent (p:parent)
Is Visible (#form input:visible)
Is Hidden (#form input:hidden)
Form element :input (#form :input)
Form element :radio (#form :radio)
Form element :checkbox (#form :checkbox)
Form element :text (#form :text)
Form element :radio:checked (#form :radio:checked)
Form element :checkbox:checked (#form :checkbox:checked)
Form element :checkbox:checked, :radio:checked (#form :checkbox:checked, #form :radio:checked)
Headers (:header)
Has Children - :has() (p:has(a))
event module: bind(), with data (0, 3, 3)
bind() with data, check passed data exists
bind() with data, Check value of passed data: bar
Event handler unbound when using data.
event module: bind(), with data, trigger with data (0, 4, 4)
check passed data exists
Check value of passed data: bar
Check trigger data
Check value of trigger data: foo
event module: bind(), multiple events at once (0, 2, 2)
bind() with multiple events at once: 1
bind() with multiple events at once: 1
event module: bind(), no data (0, 1, 1)
Check that no data is added to the event object
event module: bind(), iframes (0, 0, 0)
event module: bind(), trigger change on select (0, 3, 3)
Event.data is not a global event object: 0
Event.data is not a global event object: 1
Event.data is not a global event object: 2
event module: bind(), namespaced events, cloned events (0, 6, 6)
Normal click triggered
Namespaced click triggered
Namespaced click triggered
Normal click triggered
Check node,textnode,comment bind just does real nodes: 1
Handler is bound to appendTo'd elements
event module: trigger() shortcuts (0, 6, 6)
Context element does not exist, length must be zero: 0
Context element does not exist, direct access to element must return undefined
click event handler for checkbox gets fired twice, see #815
Check that click, triggers onclick event handler also: 1
Check that click, triggers onclick event handler on an a tag also: 1
Trigger the load event, using the shortcut .load() (#2819)
event module: unbind(event) (0, 8, 8)
Fake normal bind
Fake onebind
Fake normal bind
Handler is removed
Extra handlers weren't accidentally removed.
Removed the events expando after all handlers are unbound.
unbind() with multiple events at once: 0
unbind() with multiple events at once: 0
event module: trigger(event, [data], [fn]) (0, 67, 67)
check passed data: click
check passed data: 1
check passed data: 2
check passed data: abc
Native call was triggered
check passed data: click
check passed data: 1
check passed data: 2
check passed data: abc
check passed data: 1
check passed data: 2
check passed data: abc
check current value: test
Native call was triggered
check passed data: click
check passed data: 1
check passed data: 2
check passed data: abc
check passed data: 1
check passed data: 2
check passed data: abc
check passed data: click
check passed data: 1
check passed data: 2
check passed data: abc
Verify handler response: test
check passed data: click
check passed data: 1
check passed data: 2
check passed data: abc
check passed data: 1
check passed data: 2
check passed data: abc
Verify handler response: false
check passed data: click
check passed data: 1
check passed data: 2
check passed data: abc
Verify handler response: test
check passed data: click
check passed data: 1
check passed data: 2
check passed data: abc
check passed data: click
check passed data: 1
check passed data: 2
check passed data: abc
Verify handler response: test
Trigger focus on hidden element
check passed data: click
check passed data: 1
check passed data: 2
check passed data: abc
check passed data: 1
check passed data: 2
check passed data: abc
check current value: test
Verify triggerHandler return is overwritten by extra function: newVal
check passed data: click
check passed data: 1
check passed data: 2
check passed data: abc
check passed data: 1
check passed data: 2
check passed data: abc
check current value: test
Verify triggerHandler return is not overwritten by extra function: test
event module: toggle(Function, Function, ...) (0, 11, 11)
Check for toggle(fn, fn): 1
toggle correctly passes through additional triggered arguments, see #1701: 4
Execute event only once
toggle(Function,Function) assigned from within one('xxx'), see #1054: 0
toggle(Function,Function) assigned from within one('xxx'), see #1054: 1
Trying toggle with 3 functions, attempt 1 yields 1: 1
Trying toggle with 3 functions, attempt 2 yields 2: 2
Trying toggle with 3 functions, attempt 3 yields 3: 3
Trying toggle with 3 functions, attempt 4 yields 1: 1
Trying toggle with 3 functions, attempt 5 yields 2: 2
Unbinding one function from toggle unbinds them all
event module: jQuery(function($) {}) (0, 1, 1)
ready doesn't provide an event object, instead it provides a reference to the jQuery function, see http://docs.jquery.com/Events/ready#fn: function( selector, context ) { // The jQuery object is actually just the init constructor 'enhanced' return new jQuery.fn.init( selector, context ); }
event module: event properties (0, 1, 1)
assert event.timeStamp is present
ajax module: $.ajax() - success callbacks (0, 8, 8)
ajaxStart
beforeSend
ajaxSend
success
ajaxSuccess
complete
ajaxComplete
ajaxStop
ajax module: $.ajax() - error callbacks (2, 6, 8)
ajaxStart
beforeSend
ajaxSend
success
ajaxSuccess
complete
ajaxComplete
ajaxStop
ajax module: $.ajax() - disabled globals (0, 3, 3)
beforeSend
success
complete
ajax module: $.ajax - xml: non-namespace elements inside namespaced elements (0, 3, 3)
properties in responseXML: 1
jsconf in responseXML: 1
things in responseXML: 2
ajax module: $.ajax - beforeSend (0, 1, 1)
check beforeSend was executed
ajax module: $.ajax - beforeSend, cancel request (#2688) (0, 2, 2)
beforeSend got called, canceling
canceled request must return false instead of XMLHttpRequest instance
ajax module: $.ajax - dataType html (0, 5, 5)
test.html executed
test.js executed
Check content for datatype html
Check if script was evaluated for datatype html: foo
Check if script src was evaluated for datatype html: bar
ajax module: serialize() (0, 6, 6)
Check form serialization as query string: action=Test&radio2=on&check=on&hidden=&foo%5Bbar%5D=&name=name&select1=&select2=3&select3=1&select3=2
Check input serialization as query string: action=Test&radio2=on&check=on&hidden=&foo%5Bbar%5D=&name=name&select1=&select2=3&select3=1&select3=2
Check form serialization as query string: T3=%3F%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My+Name=me&S1=abc&S3=YES&S4=
Check input serialization as query string: T3=%3F%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My+Name=me&S1=abc&S3=YES&S4=
Multiple form serialization as query string: action=Test&radio2=on&check=on&hidden=&foo%5Bbar%5D=&name=name&select1=&select2=3&select3=1&select3=2&T3=%3F%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My+Name=me&S1=abc&S3=YES&S4=
Mixed form/input serialization as query string: action=Test&radio2=on&check=on&hidden=&foo%5Bbar%5D=&name=name&select1=&select2=3&select3=1&select3=2&T3=%3F%0AZ&H1=x&H2=&PWD=&T1=&T2=YES&My+Name=me&S1=abc&S3=YES&S4=
ajax module: $.param() (0, 4, 4)
simple: foo=bar&baz=42&quux=All+your+base+are+belong+to+us
with array: someName=1&someName=2&someName=3®ularThing=blah
more array: foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All+your+base+are+belong+to+us
even more arrays: foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All+your+base+are+belong+to+us
ajax module: synchronous request (0, 1, 1)
check returned text
ajax module: synchronous request with callbacks (0, 2, 2)
sucess callback executed
check returned text
ajax module: pass-through request object (2, 6, 8)
get
post
script
json
generic
test.js executed
Check all ajax calls successful expected: 5 actual: 4
Check no ajax errors (status: 404) expected: 0 actual: 1
ajax module: ajax cache (0, 18, 18)
test with no parameters
test with 1 parameter
test with _= parameter
test with 1 parameter plus _= one
test with 1 parameter plus _= one before it
test with 2 parameters surrounding _= one
Test to make sure only one 'no-cache' parameter is there: 1
Test to be sure parameter (if it was there) was replaced
Test to make sure only one 'no-cache' parameter is there: 1
Test to be sure parameter (if it was there) was replaced
Test to make sure only one 'no-cache' parameter is there: 1
Test to be sure parameter (if it was there) was replaced
Test to make sure only one 'no-cache' parameter is there: 1
Test to be sure parameter (if it was there) was replaced
Test to make sure only one 'no-cache' parameter is there: 1
Test to be sure parameter (if it was there) was replaced
Test to make sure only one 'no-cache' parameter is there: 1
Test to be sure parameter (if it was there) was replaced
ajax module: global ajaxSettings (0, 2, 2)
Check extending {}
Check extending { zoo: 'a', ping: 'b' }
ajax module: load(String) (0, 1, 1)
name.html retrieved
ajax module: load('url selector') (0, 1, 1)
Verify that specific elements were injected: 2
ajax module: load(String, Function) with ajaxSetup on dataType json, see #2046 (0, 1, 1)
Verify the load() dataType was html: html
ajax module: load(String, Function) - simple: inject text into DOM (0, 2, 2)
name.html retrieved
Check if content was injected into the DOM
ajax module: load(String, Function) - check scripts (0, 7, 7)
test.html executed
test.js executed
Check content after loading html
Check if script evaluation has modified DOM: foo
Check if script was evaluated after load: foo
Check if script src was evaluated after load: bar
Check if script evaluation has modified DOM: bar
ajax module: load(String, Function) - check file with only a script tag (0, 3, 3)
test2.html executed
Check if script evaluation has modified DOM: foo
Check if script was evaluated after load: foo
ajax module: $.get(String, Hash, Function) - parse xml and use text() on nodes (0, 2, 2)
Check first tab: blabla
Check second tab: blublu
ajax module: $.getScript(String, Function) - with callback (0, 2, 2)
test.js executed
Check if script was evaluated: bar
ajax module: $.getScript(String, Function) - no callback (0, 1, 1)
test.js executed
fx module: animate(Hash, Object, Function) (0, 1, 1)
Check if animate changed the hash parameter: show
fx module: animate option (queue === false) (0, 1, 1)
Animations finished in the correct order
fx module: queue() defaults to 'fx' type (0, 2, 2)
queue() got an array set with type 'fx'
queue('fx') got an array set with no type
fx module: stop() (0, 3, 3)
An animation occurred 4px 0px
Stop didn't reset the animation 4px 0px
The animation didn't continue: 4
fx module: stop() - several in queue (0, 4, 4)
All 3 still in the queue: 3
An animation occurred 4px 0px
Stop didn't reset the animation 4px 0px
The next animation continued: 2
fx module: stop(clearQueue) (0, 4, 4)
An animation occurred 4px 0px
Stop didn't reset the animation 4px 0px
The animation queue was cleared: 0
The animation didn't continue: 4
fx module: stop(clearQueue, gotoEnd) (0, 3, 3)
An animation occurred 4px 0px
Stop() reset the animation: 200
The next animation continued: 3
fx module: toggle() (0, 3, 3)
is visible
is hidden
is visible again
fx module: JS Overflow and Display (0, 2, 2)
Overflow should be visible: visible: visible
Display shouldn't be tampered with.: inline
fx module: CSS Overflow and Display (0, 2, 2)
Overflow should be visible: visible: visible
Display shouldn't be tampered with.: inline
fx module: CSS Auto to show (0, 5, 5)
Showing, display should block: block: block
Width must be reset to : : 0
Height must be reset to : : 0
Opacity must be reset to : : 
Make sure height is auto.
fx module: CSS Auto to hide (0, 4, 4)
Width must be reset to : : 0
Height must be reset to : : 0
Opacity must be reset to : : 
Hiding, display should be none: none: none
fx module: CSS Auto to 100 (0, 6, 6)
Final opacity should be 1: 1: 1
Opacity should be explicitly set to 1, is instead: 1
Final width should be 100: 100px: 100px
Width should be explicitly set to 100, is instead: 0
Final height should be 100: 100px: 100px
Height should be explicitly set to 100, is instead: 0
fx module: CSS Auto to 50 (0, 6, 6)
Final opacity should be 0.5: 0.5: 0.5
Opacity should be explicitly set to 0.5, is instead: 0.5
Final width should be 50: 50px: 50px
Width should be explicitly set to 50, is instead: 0
Final height should be 50: 50px: 50px
Height should be explicitly set to 50, is instead: 0
fx module: CSS Auto to 0 (0, 6, 6)
Final opacity should be 0: 0: 0
Opacity should be explicitly set to 0, is instead: 0
Final width should be 0: 0px: 0px
Width should be explicitly set to 0, is instead: 0
Final height should be 0: 0px: 0px
Height should be explicitly set to 0, is instead: 0
fx module: JS Auto to show (0, 5, 5)
Showing, display should block: block: block
Width must be reset to : auto: 0
Height must be reset to : auto: 0
Opacity must be reset to : : 
Make sure height is auto.
fx module: JS Auto to hide (0, 4, 4)
Width must be reset to : auto: 0
Height must be reset to : auto: 0
Opacity must be reset to : : 
Hiding, display should be none: none: none
fx module: JS Auto to 100 (0, 6, 6)
Final opacity should be 1: 1: 1
Opacity should be explicitly set to 1, is instead: 1
Final width should be 100: 100px: 100px
Width should be explicitly set to 100, is instead: 0
Final height should be 100: 100px: 100px
Height should be explicitly set to 100, is instead: 0
fx module: JS Auto to 50 (0, 6, 6)
Final opacity should be 0.5: 0.5: 0.5
Opacity should be explicitly set to 0.5, is instead: 0.5
Final width should be 50: 50px: 50px
Width should be explicitly set to 50, is instead: 0
Final height should be 50: 50px: 50px
Height should be explicitly set to 50, is instead: 0
fx module: JS Auto to 0 (0, 6, 6)
Final opacity should be 0: 0: 0
Opacity should be explicitly set to 0, is instead: 0
Final width should be 0: 0px: 0px
Width should be explicitly set to 0, is instead: 0
Final height should be 0: 0px: 0px
Height should be explicitly set to 0, is instead: 0
fx module: CSS 100 to show (0, 5, 5)
Showing, display should block: block: block
Width must be reset to : : 0
Height must be reset to : : 0
Opacity must be reset to : : 
Make sure height is auto.
fx module: CSS 100 to hide (0, 4, 4)
Width must be reset to : : 0
Height must be reset to : : 0
Opacity must be reset to : : 
Hiding, display should be none: none: none
fx module: CSS 100 to 100 (0, 6, 6)
Final opacity should be 1: 1: 1
Opacity should be explicitly set to 1, is instead: 1
Final width should be 100: 100px: 100px
Width should be explicitly set to 100, is instead: 0
Final height should be 100: 100px: 100px
Height should be explicitly set to 100, is instead: 0
fx module: CSS 100 to 50 (0, 6, 6)
Final opacity should be 0.5: 0.5: 0.5
Opacity should be explicitly set to 0.5, is instead: 0.5
Final width should be 50: 50px: 50px
Width should be explicitly set to 50, is instead: 0
Final height should be 50: 50px: 50px
Height should be explicitly set to 50, is instead: 0
fx module: CSS 100 to 0 (0, 6, 6)
Final opacity should be 0: 0: 0
Opacity should be explicitly set to 0, is instead: 0
Final width should be 0: 0px: 0px
Width should be explicitly set to 0, is instead: 0
Final height should be 0: 0px: 0px
Height should be explicitly set to 0, is instead: 0
fx module: JS 100 to show (0, 5, 5)
Showing, display should block: block: block
Width must be reset to 100: 100px: 0
Height must be reset to 100: 100px: 0
Opacity must be reset to 1: 1: 1
Make sure height is auto.
fx module: JS 100 to hide (0, 4, 4)
Width must be reset to 100: 100px: 0
Height must be reset to 100: 100px: 0
Opacity must be reset to 1: 1: 1
Hiding, display should be none: none: none
fx module: JS 100 to 100 (0, 6, 6)
Final opacity should be 1: 1: 1
Opacity should be explicitly set to 1, is instead: 1
Final width should be 100: 100px: 100px
Width should be explicitly set to 100, is instead: 0
Final height should be 100: 100px: 100px
Height should be explicitly set to 100, is instead: 0
fx module: JS 100 to 50 (0, 6, 6)
Final opacity should be 0.5: 0.5: 0.5
Opacity should be explicitly set to 0.5, is instead: 0.5
Final width should be 50: 50px: 50px
Width should be explicitly set to 50, is instead: 0
Final height should be 50: 50px: 50px
Height should be explicitly set to 50, is instead: 0
fx module: JS 100 to 0 (0, 6, 6)
Final opacity should be 0: 0: 0
Opacity should be explicitly set to 0, is instead: 0
Final width should be 0: 0px: 0px
Width should be explicitly set to 0, is instead: 0
Final height should be 0: 0px: 0px
Height should be explicitly set to 0, is instead: 0
fx module: CSS 50 to show (0, 5, 5)
Showing, display should block: block: block
Width must be reset to : : 0
Height must be reset to : : 0
Opacity must be reset to : : 
Make sure height is auto.
fx module: CSS 50 to hide (0, 4, 4)
Width must be reset to : : 0
Height must be reset to : : 0
Opacity must be reset to : : 
Hiding, display should be none: none: none
fx module: CSS 50 to 100 (0, 6, 6)
Final opacity should be 1: 1: 1
Opacity should be explicitly set to 1, is instead: 1
Final width should be 100: 100px: 100px
Width should be explicitly set to 100, is instead: 0
Final height should be 100: 100px: 100px
Height should be explicitly set to 100, is instead: 0
fx module: CSS 50 to 50 (0, 6, 6)
Final opacity should be 0.5: 0.5: 0.5
Opacity should be explicitly set to 0.5, is instead: 0.5
Final width should be 50: 50px: 50px
Width should be explicitly set to 50, is instead: 0
Final height should be 50: 50px: 50px
Height should be explicitly set to 50, is instead: 0
fx module: CSS 50 to 0 (0, 6, 6)
Final opacity should be 0: 0: 0
Opacity should be explicitly set to 0, is instead: 0
Final width should be 0: 0px: 0px
Width should be explicitly set to 0, is instead: 0
Final height should be 0: 0px: 0px
Height should be explicitly set to 0, is instead: 0
fx module: JS 50 to show (0, 5, 5)
Showing, display should block: block: block
Width must be reset to 50: 50px: 0
Height must be reset to 50: 50px: 0
Opacity must be reset to 0.5: 0.5: 0.5
Make sure height is auto.
fx module: JS 50 to hide (0, 4, 4)
Width must be reset to 50: 50px: 0
Height must be reset to 50: 50px: 0
Opacity must be reset to 0.5: 0.5: 0.5
Hiding, display should be none: none: none
fx module: JS 50 to 100 (0, 6, 6)
Final opacity should be 1: 1: 1
Opacity should be explicitly set to 1, is instead: 1
Final width should be 100: 100px: 100px
Width should be explicitly set to 100, is instead: 0
Final height should be 100: 100px: 100px
Height should be explicitly set to 100, is instead: 0
fx module: JS 50 to 50 (0, 6, 6)
Final opacity should be 0.5: 0.5: 0.5
Opacity should be explicitly set to 0.5, is instead: 0.5
Final width should be 50: 50px: 50px
Width should be explicitly set to 50, is instead: 0
Final height should be 50: 50px: 50px
Height should be explicitly set to 50, is instead: 0
fx module: JS 50 to 0 (0, 6, 6)
Final opacity should be 0: 0: 0
Opacity should be explicitly set to 0, is instead: 0
Final width should be 0: 0px: 0px
Width should be explicitly set to 0, is instead: 0
Final height should be 0: 0px: 0px
Height should be explicitly set to 0, is instead: 0
fx module: CSS 0 to show (0, 5, 5)
Showing, display should block: block: block
Width must be reset to : : 0
Height must be reset to : : 0
Opacity must be reset to : : 
Make sure height is auto.
fx module: CSS 0 to hide (0, 4, 4)
Width must be reset to : : 0
Height must be reset to : : 0
Opacity must be reset to : : 
Hiding, display should be none: none: none
fx module: CSS 0 to 100 (0, 6, 6)
Final opacity should be 1: 1: 1
Opacity should be explicitly set to 1, is instead: 1
Final width should be 100: 100px: 100px
Width should be explicitly set to 100, is instead: 0
Final height should be 100: 100px: 100px
Height should be explicitly set to 100, is instead: 0
fx module: CSS 0 to 50 (0, 6, 6)
Final opacity should be 0.5: 0.5: 0.5
Opacity should be explicitly set to 0.5, is instead: 0.5
Final width should be 50: 50px: 50px
Width should be explicitly set to 50, is instead: 0
Final height should be 50: 50px: 50px
Height should be explicitly set to 50, is instead: 0
fx module: CSS 0 to 0 (0, 6, 6)
Final opacity should be 0: 0: 0
Opacity should be explicitly set to 0, is instead: 0
Final width should be 0: 0px: 0px
Width should be explicitly set to 0, is instead: 0
Final height should be 0: 0px: 0px
Height should be explicitly set to 0, is instead: 0
fx module: JS 0 to show (0, 5, 5)
Showing, display should block: block: block
Width must be reset to 0: 0px: 0
Height must be reset to 0: 0px: 0
Opacity must be reset to 0: 0: 0
Make sure height is auto.
fx module: JS 0 to hide (0, 4, 4)
Width must be reset to 0: 0px: 0
Height must be reset to 0: 0px: 0
Opacity must be reset to 0: 0: 0
Hiding, display should be none: none: none
fx module: JS 0 to 100 (0, 6, 6)
Final opacity should be 1: 1: 1
Opacity should be explicitly set to 1, is instead: 1
Final width should be 100: 100px: 100px
Width should be explicitly set to 100, is instead: 0
Final height should be 100: 100px: 100px
Height should be explicitly set to 100, is instead: 0
fx module: JS 0 to 50 (0, 6, 6)
Final opacity should be 0.5: 0.5: 0.5
Opacity should be explicitly set to 0.5, is instead: 0.5
Final width should be 50: 50px: 50px
Width should be explicitly set to 50, is instead: 0
Final height should be 50: 50px: 50px
Height should be explicitly set to 50, is instead: 0
fx module: JS 0 to 0 (0, 6, 6)
Final opacity should be 0: 0: 0
Opacity should be explicitly set to 0, is instead: 0
Final width should be 0: 0px: 0px
Width should be explicitly set to 0, is instead: 0
Final height should be 0: 0px: 0px
Height should be explicitly set to 0, is instead: 0
fx module: Chain fadeOut fadeIn (0, 5, 5)
Make sure that opacity is reset (Old: 1 Cur: 1): 1
Make sure that height is reset (Old: 0 Cur: 0): 0
Make sure that width is reset (Old: 0 Cur: 0): 0
Make sure that display is reset (Old: block Cur: block): block
Make sure that overflow is reset (Old: visible Cur: visible): visible
fx module: Chain fadeIn fadeOut (0, 5, 5)
Make sure that opacity is reset (Old: 1 Cur: 1): 1
Make sure that height is reset (Old: 0 Cur: 0): 0
Make sure that width is reset (Old: 0 Cur: 0): 0
Make sure that display is reset (Old: none Cur: none): none
Make sure that overflow is reset (Old: visible Cur: visible): visible
fx module: Chain hide show (0, 5, 5)
Make sure that opacity is reset (Old: 1 Cur: 1): 1
Make sure that height is reset (Old: 0 Cur: 0): 0
Make sure that width is reset (Old: 0 Cur: 0): 0
Make sure that display is reset (Old: block Cur: block): block
Make sure that overflow is reset (Old: visible Cur: visible): visible
fx module: Chain show hide (0, 5, 5)
Make sure that opacity is reset (Old: 1 Cur: 1): 1
Make sure that height is reset (Old: 0 Cur: 0): 0
Make sure that width is reset (Old: 0 Cur: 0): 0
Make sure that display is reset (Old: none Cur: none): none
Make sure that overflow is reset (Old: visible Cur: visible): visible
fx module: Chain toggle in (0, 5, 5)
Make sure that opacity is reset (Old: 1 Cur: 1): 1
Make sure that height is reset (Old: 0 Cur: 0): 0
Make sure that width is reset (Old: 0 Cur: 0): 0
Make sure that display is reset (Old: block Cur: block): block
Make sure that overflow is reset (Old: visible Cur: visible): visible
fx module: Chain toggle out (0, 5, 5)
Make sure that opacity is reset (Old: 1 Cur: 1): 1
Make sure that height is reset (Old: 0 Cur: 0): 0
Make sure that width is reset (Old: 0 Cur: 0): 0
Make sure that display is reset (Old: none Cur: none): none
Make sure that overflow is reset (Old: visible Cur: visible): visible
fx module: Chain slideDown slideUp (0, 5, 5)
Make sure that opacity is reset (Old: 1 Cur: 1): 1
Make sure that height is reset (Old: 0 Cur: 0): 0
Make sure that width is reset (Old: 0 Cur: 0): 0
Make sure that display is reset (Old: none Cur: none): none
Make sure that overflow is reset (Old: visible Cur: visible): visible
fx module: Chain slideUp slideDown (0, 5, 5)
Make sure that opacity is reset (Old: 1 Cur: 1): 1
Make sure that height is reset (Old: 0 Cur: 0): 0
Make sure that width is reset (Old: 0 Cur: 0): 0
Make sure that display is reset (Old: block Cur: block): block
Make sure that overflow is reset (Old: visible Cur: visible): visible
fx module: Chain slideToggle in (0, 5, 5)
Make sure that opacity is reset (Old: 1 Cur: 1): 1
Make sure that height is reset (Old: 0 Cur: 0): 0
Make sure that width is reset (Old: 0 Cur: 0): 0
Make sure that display is reset (Old: block Cur: block): block
Make sure that overflow is reset (Old: visible Cur: visible): visible
fx module: Chain slideToggle out (0, 5, 5)
Make sure that opacity is reset (Old: 1 Cur: 1): 1
Make sure that height is reset (Old: 0 Cur: 0): 0
Make sure that width is reset (Old: 0 Cur: 0): 0
Make sure that display is reset (Old: none Cur: none): none
Make sure that overflow is reset (Old: visible Cur: visible): visible
